/* GPLv3 license
Callout Cards deck
Author: ElsaTam (Kapirklaa in Discord)
*/

.callout[data-callout="cards-deck"] {
    --callout-icon: lucide-layers;
    --callout-content-padding: 0;
    --deck-border-width: 1px;
    --callout-border-width: var(--deck-border-width);
    --p-spacing: 0;
}

.callout[data-callout="cards-deck"] .callout-content {
    overflow: visible;
}

.callout[data-callout="cards-deck"] .callout-content:has(p:nth-of-type(2)) > p {
    border: var(--callout-border-width) solid rgba(var(--callout-color), var(--callout-border-opacity));
    box-shadow: inset 0px 0px 10px 0px color-mix(in srgb, rgba(var(--callout-color), 0.5), rgba(0, 0, 0, 0.5) 40%);
    background-color: rgba(var(--callout-color), 0.1);
}

.callout[data-callout="cards-deck"] .callout-content > p {
    --card-gap: 30px;
    --card-width: 70px;
    --card-height: 100px;
    --card-scale-hover: 1.1;
    --card-shadow-offset-y: 2px;
    --card-shadow-offset-x: -2px;
    --card-shadow-blur: 3px;
    --card-shadow-opacity: 0.2;
    --card-base-translation: calc(-0.5 * (var(--card-width) - var(--card-gap)));
    --deck-scrollbar-width: 10px;
    --padding-scale-factor: (var(--card-scale-hover) - 1) * var(--card-height);

    color: var(--text-muted);
    height: calc((var(--card-height) + var(--card-shadow-offset-y) * 2 + var(--card-shadow-blur) * 2) * var(--card-scale-hover) + var(--padding-bottom) + 2 * var(--deck-border-width));
    display: flex;
    align-items: center;
    justify-content: left;
    overflow-x: auto;

    --padding-bottom: max(0px, var(--card-shadow-blur) + var(--card-shadow-offset-y) + var(--padding-scale-factor));
    --padding-top: max(0px, var(--card-shadow-blur) - var(--card-shadow-offset-y) + var(--padding-scale-factor));
    --padding-left: calc(-1 * var(--card-base-translation) + max(0px, var(--card-shadow-blur) - var(--card-shadow-offset-x)));
    --padding-right: calc(-1 * var(--card-base-translation) + max(0px, var(--card-shadow-blur) + var(--card-shadow-offset-x)));

    padding-bottom: var(--padding-bottom);
    padding-top: var(--padding-top);
    padding-left: var(--padding-left);
    padding-right: var(--padding-right);

    &::-webkit-scrollbar{
        width: var(--deck-scrollbar-width);
        height: var(--deck-scrollbar-width);
    }

    > * {
        width: var(--card-gap);
        transition: transform 0.5s ease-in-out;
        transform: translateX(var(--card-base-translation));
        transform-origin: right;
    }

    > :hover {
        transform: translateX(var(--card-base-translation)) scale(var(--card-scale-hover));
    }

    > :hover ~ * {
        transform: translateX(var(--card-base-translation)) translateX(calc(var(--card-width) - var(--card-gap)));
    }

    > a:has(> .image-embed) { font-size: 0; }

    > span:has(> img),
    > a > span:has(> img) {
        transition: transform 0.5s ease-in-out, filter 0.2s linear;
        height: var(--card-height);
        vertical-align: middle;
    }

    > span > img,
    > a > span > img {
        border-radius: var(--radius-l);
        border: 1px solid currentColor;
        box-shadow: var(--card-shadow-offset-x) var(--card-shadow-offset-y) var(--card-shadow-blur) rgba(0, 0, 0, var(--card-shadow-opacity));
        max-width: var(--card-width);
        height: var(--card-height);
        object-fit: cover;
        object-position: center center;
    }
}



/* Remove code bellow in case of performance issues */
.callout[data-callout="cards-deck"] .callout-content > p {
    > span > img:hover,
    > a > span > img:hover {
        color: rgb(var(--callout-color));
    }

    &:has(> :hover) > :not(:hover) {
        filter: saturate(0.2);
    }
}